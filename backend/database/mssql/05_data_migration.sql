/*
=================================================================
BIDashboard - SQL Server Data Migration and Initial Data Script
Author: Database Architect
Date: 2025-09-03
Description: Migrates data from JSON and creates initial setup data
=================================================================
*/

USE BIDashboard;
GO

-- =================================================================
-- INITIAL SETUP DATA
-- =================================================================

-- Insert default user roles
INSERT INTO Security.UserRoles (RoleName, Description) VALUES
('SuperAdmin', 'Full system access with all privileges'),
('Admin', 'Administrative access to dashboards and users'),
('DashboardAdmin', 'Full access to dashboard management'),
('DashboardEditor', 'Can create and edit dashboards'),
('DashboardViewer', 'Read-only access to dashboards'),
('HRAdmin', 'Full access to HR module'),
('HRManager', 'HR management with limited admin rights'),
('User', 'Basic user with limited access'),
('Guest', 'Guest access with minimal privileges');
GO

-- Insert default categories
INSERT INTO Dashboard.Categories (CategoryName, Description, IconClass, SortOrder, CreatedBy) VALUES
('Operations', 'Operational dashboards for daily business monitoring', 'fas fa-cogs', 1, 1),
('Finance', 'Financial analysis and reporting dashboards', 'fas fa-chart-line', 2, 1),
('Workshop', 'Workshop and maintenance related dashboards', 'fas fa-tools', 3, 1),
('HR', 'Human Resources management dashboards', 'fas fa-users', 4, 1),
('Analytics', 'Business intelligence and analytics dashboards', 'fas fa-chart-bar', 5, 1),
('Logistics', 'Supply chain and logistics dashboards', 'fas fa-truck', 6, 1);
GO

-- Insert subcategories
INSERT INTO Dashboard.Subcategories (CategoryID, SubcategoryName, Description, SortOrder, CreatedBy) VALUES
(1, 'Daily Operations', 'Day-to-day operational monitoring', 1, 1),
(1, 'Performance Metrics', 'Key performance indicators', 2, 1),
(2, 'Revenue Analysis', 'Revenue and profit analysis', 1, 1),
(2, 'Cost Management', 'Cost tracking and analysis', 2, 1),
(3, 'Fleet Management', 'Vehicle fleet monitoring', 1, 1),
(3, 'Maintenance Tracking', 'Equipment maintenance schedules', 2, 1),
(4, 'Employee Management', 'Staff administration and tracking', 1, 1),
(4, 'Performance Reviews', 'Employee performance monitoring', 2, 1);
GO

-- Insert default departments
INSERT INTO HR.Departments (DepartmentName, Description) VALUES
('Information Technology', 'IT infrastructure and software development'),
('Operations', 'Daily business operations and logistics'),
('Finance', 'Financial management and accounting'),
('Human Resources', 'Employee management and development'),
('Marketing', 'Marketing and business development'),
('Customer Service', 'Customer support and relations'),
('Quality Assurance', 'Quality control and testing'),
('Administration', 'General administration and support');
GO

-- Insert default positions
INSERT INTO HR.Positions (DepartmentID, PositionName, Description, MinSalary, MaxSalary) VALUES
(1, 'System Administrator', 'Manages IT infrastructure and systems', 60000, 90000),
(1, 'Software Developer', 'Develops and maintains software applications', 70000, 120000),
(1, 'Database Administrator', 'Manages database systems and data', 65000, 100000),
(2, 'Operations Manager', 'Oversees daily operations', 75000, 110000),
(2, 'Operations Coordinator', 'Coordinates operational activities', 45000, 65000),
(3, 'Financial Analyst', 'Analyzes financial data and trends', 55000, 85000),
(3, 'Accountant', 'Manages accounting and financial records', 45000, 70000),
(4, 'HR Manager', 'Manages human resources activities', 70000, 100000),
(4, 'HR Specialist', 'Handles specific HR functions', 45000, 65000),
(5, 'Marketing Manager', 'Leads marketing initiatives', 65000, 95000),
(6, 'Customer Service Representative', 'Provides customer support', 35000, 50000),
(7, 'QA Analyst', 'Performs quality assurance testing', 50000, 75000),
(8, 'Administrative Assistant', 'Provides administrative support', 35000, 50000);
GO

-- =================================================================
-- MIGRATE EXISTING DATA (Mario Gonzalez and Team)
-- =================================================================

-- Insert Mario Gonzalez as the primary admin user
-- Note: Password hash should be generated by the application
INSERT INTO Security.Users (
    Username, HashedPassword, IsAdmin, IsActive, 
    EmailAddress, FirstName, LastName, CreatedBy
) VALUES (
    'mario_gonzalez', 
    '$2b$12$DNtvh6lSNPOeYtLJg4pTweGiA7uEpVl8kmc08X77jeJVAxHjzmVGu', -- Mario2024!
    1, 1,
    'mario.gonzalez@bidashboard.com', 
    'Mario', 'Gonzalez', 1
);

-- Insert admin user (legacy)
INSERT INTO Security.Users (
    Username, HashedPassword, IsAdmin, IsActive, 
    EmailAddress, FirstName, LastName, CreatedBy
) VALUES (
    'admin', 
    '$2b$12$fxot/aKeQn6xuUbV80dsReka/lNYEioENdN.7fIYixFNiba8Ljfe.', -- admin password
    1, 1,
    'admin@bidashboard.com', 
    'System', 'Administrator', 1
);

-- Insert test user
INSERT INTO Security.Users (
    Username, HashedPassword, IsAdmin, IsActive, 
    EmailAddress, FirstName, LastName, CreatedBy
) VALUES (
    'testuser', 
    '$2b$12$P2vcrmhgkVBu4Nl3c9x0nOhmzSeDeWPfRwP.U8dt3l0veOP2AiKxi', -- test password
    0, 1,
    'testuser@bidashboard.com', 
    'Test', 'User', 1
);
GO

-- Assign roles to users
INSERT INTO Security.UserRoleAssignments (UserID, RoleID, AssignedBy) VALUES
(1, 1, 1), -- Mario Gonzalez -> SuperAdmin
(1, 3, 1), -- Mario Gonzalez -> DashboardAdmin  
(1, 6, 1), -- Mario Gonzalez -> HRAdmin
(2, 2, 1), -- admin -> Admin
(3, 8, 1); -- testuser -> User
GO

-- =================================================================
-- MIGRATE DASHBOARD DATA FROM JSON
-- =================================================================

-- Get category IDs for referencing
DECLARE @OperationsID INT, @FinanceID INT, @WorkshopID INT;
SELECT @OperationsID = CategoryID FROM Dashboard.Categories WHERE CategoryName = 'Operations';
SELECT @FinanceID = CategoryID FROM Dashboard.Categories WHERE CategoryName = 'Finance';  
SELECT @WorkshopID = CategoryID FROM Dashboard.Categories WHERE CategoryName = 'Workshop';

-- Insert existing dashboards (based on your PostgreSQL migration data)
INSERT INTO Dashboard.Dashboards (
    Title, AccessURL, CategoryID, SubcategoryID, Description, 
    PreviewImageURL, IsPublic, CreatedBy
) VALUES
('Planner Border Crossing', 
 'https://rebrand.ly/TMS-Border-Crossing', 
 @OperationsID, NULL,
 'This dashboard provides an operational overview of deliveries in Nuevo Laredo, showing planned vs. executed loads per day, customer demand, and state-level distribution. It tracks key metrics like confirmed vs. not confirmed shipments, DODA, entry, and manifest counts.',
 '/static/images/20250829143759_Screenshot20250829at2.37.48p.m..png', 
 1, 1),

('Calidad Operativa OPMX', 
 'https://rebrand.ly/Calidad-Operativa-OPMX', 
 @OperationsID, NULL,
 'This dashboard tracks border crossing operations and performance, showing exports, transfers, and dispatches through Laredo. It highlights activity by carrier, empty returns, and state-level distribution of loads.',
 '/static/images/20250829144316_Screenshot20250829at2.43.07p.m..png', 
 1, 1),

('Mechanics Analytics', 
 'https://rebrand.ly/Mechanics-Analytics', 
 @WorkshopID, NULL,
 'Control panel for monitoring truck allocation, availability, and issues across the company's fleet.',
 '/static/images/20250829153628_Screenshot20250829at3.36.19p.m..png', 
 1, 1),

('Mechanics Analytics MX', 
 'https://rebrand.ly/Mechanics-Analytics-MX', 
 @WorkshopID, NULL,
 'Este tablero muestra el estado operativo de la flota en México, clasificando las unidades en categorías como asignadas, disponibles, en taller, accidentadas, robadas.',
 '/static/images/20250829154757_Screenshot20250829at3.42.52p.m..png', 
 1, 1),

('Workshop Analytics', 
 'https://rebrand.ly/Workshop-Analytics', 
 @WorkshopID, NULL,
 'This dashboard shows the daily utilization and mileage trends of the fleet, comparing active vs. stopped units.',
 '/static/images/20250829154945_Screenshot20250829at3.49.37p.m..png', 
 1, 1),

('Truck Performance USA Global', 
 'https://rebrand.ly/Rendimiento-USA-Global', 
 @WorkshopID, NULL,
 'This dashboard focuses on fuel efficiency and operational performance of the fleet. It compares miles per gallon, fuel usage, idle time, emissions, and costs.',
 '/static/images/20250829155408_Screenshot20250829at3.53.34p.m..png', 
 1, 1),

('Truck Kardex', 
 'https://rebrand.ly/Truck-Kardex', 
 @WorkshopID, NULL,
 'This dashboard provides a maintenance history and service record for each truck. It consolidates workshop visits, service types, parts replaced.',
 '/static/images/20250829155707_Screenshot20250829at3.56.28p.m..png', 
 1, 1),

('Performance MX', 
 'https://rebrand.ly/Rendimiento-MX', 
 @WorkshopID, NULL,
 'Este tablero se centra en el rendimiento operativo y de consumo de combustible de la flota en México.',
 '/static/images/20250829160349_Screenshot20250829at4.03.34p.m..png', 
 1, 1),

('Lumper Fee Audit', 
 'https://rebrand.ly/Lumper-Fee-Audit', 
 @FinanceID, NULL,
 'Este tablero se centra en la auditoría de cargos por lumper (manejo de carga en almacenes o centros de distribución).',
 '/static/images/20250829161005_Screenshot20250829at4.09.56p.m..png', 
 1, 1),

('Análisis Estrategia Comercial', 
 'https://rebrand.ly/Analisis-Estrategia-Comercial', 
 @OperationsID, NULL,
 'Este tablero analiza la estrategia comercial de cargas, mostrando la distribución de loads por tipo (cliente, pendiente, broker).',
 '/static/images/20250829162105_Screenshot20250829at4.20.53p.m..png', 
 1, 1);
GO

-- =================================================================
-- INSERT SAMPLE EMPLOYEE DATA
-- =================================================================

-- Get department and position IDs
DECLARE @ITID INT, @OpsID INT, @FinID INT;
DECLARE @SysAdminPos INT, @OpsManagerPos INT, @FinAnalystPos INT;

SELECT @ITID = DepartmentID FROM HR.Departments WHERE DepartmentName = 'Information Technology';
SELECT @OpsID = DepartmentID FROM HR.Departments WHERE DepartmentName = 'Operations';
SELECT @FinID = DepartmentID FROM HR.Departments WHERE DepartmentName = 'Finance';

SELECT @SysAdminPos = PositionID FROM HR.Positions WHERE PositionName = 'System Administrator';
SELECT @OpsManagerPos = PositionID FROM HR.Positions WHERE PositionName = 'Operations Manager';
SELECT @FinAnalystPos = PositionID FROM HR.Positions WHERE PositionName = 'Financial Analyst';

-- Insert employees
INSERT INTO HR.Employees (
    EmployeeNumber, FirstName, LastName, EmailAddress, PhoneNumber,
    DepartmentID, PositionID, Salary, HireDate, EmploymentStatus, CreatedBy
) VALUES
('EMP001', 'Mario', 'Gonzalez', 'mario.gonzalez@bidashboard.com', '+1-555-0101',
 @ITID, @SysAdminPos, 75000.00, '2024-01-15', 'Active', 1),

('EMP002', 'Ana', 'Rodriguez', 'ana.rodriguez@bidashboard.com', '+1-555-0102',
 @OpsID, @OpsManagerPos, 80000.00, '2023-06-01', 'Active', 1),

('EMP003', 'Carlos', 'Martinez', 'carlos.martinez@bidashboard.com', '+1-555-0103',
 @FinID, @FinAnalystPos, 65000.00, '2024-03-10', 'Active', 1),

('EMP004', 'Sofia', 'Lopez', 'sofia.lopez@bidashboard.com', '+1-555-0104',
 @ITID, (SELECT PositionID FROM HR.Positions WHERE PositionName = 'Software Developer'), 85000.00, '2024-02-20', 'Active', 1),

('EMP005', 'Diego', 'Fernandez', 'diego.fernandez@bidashboard.com', '+1-555-0105',
 @OpsID, (SELECT PositionID FROM HR.Positions WHERE PositionName = 'Operations Coordinator'), 55000.00, '2024-04-01', 'Active', 1);
GO

-- =================================================================
-- INSERT DEFAULT CONFIGURATION SETTINGS
-- =================================================================

INSERT INTO Config.AppSettings (SettingCategory, SettingKey, SettingValue, DataType, Description, ModifiedBy) VALUES
('Application', 'AppName', 'BIDashboard', 'String', 'Application display name', 1),
('Application', 'Version', '1.0.0', 'String', 'Current application version', 1),
('Application', 'MaintenanceMode', 'false', 'Boolean', 'Enable maintenance mode', 1),
('Security', 'SessionTimeoutMinutes', '30', 'Integer', 'User session timeout in minutes', 1),
('Security', 'MaxFailedLoginAttempts', '5', 'Integer', 'Maximum failed login attempts before lockout', 1),
('Security', 'LockoutDurationMinutes', '30', 'Integer', 'Account lockout duration in minutes', 1),
('Security', 'PasswordMinLength', '8', 'Integer', 'Minimum password length', 1),
('Dashboard', 'DefaultRefreshInterval', '300', 'Integer', 'Default dashboard refresh interval in seconds', 1),
('Dashboard', 'MaxDashboardsPerUser', '50', 'Integer', 'Maximum dashboards per user', 1),
('Dashboard', 'EnablePublicDashboards', 'true', 'Boolean', 'Allow public dashboard sharing', 1),
('Audit', 'EnableAuditLogging', 'true', 'Boolean', 'Enable audit trail logging', 1),
('Audit', 'AuditRetentionDays', '90', 'Integer', 'Audit log retention period in days', 1),
('Email', 'SMTPServer', 'localhost', 'String', 'SMTP server for email notifications', 1),
('Email', 'SMTPPort', '587', 'Integer', 'SMTP server port', 1),
('Email', 'EnableEmailNotifications', 'false', 'Boolean', 'Enable email notifications', 1);
GO

-- =================================================================
-- CREATE SAMPLE PERFORMANCE REVIEWS
-- =================================================================

INSERT INTO HR.PerformanceReviews (
    EmployeeID, ReviewerID, ReviewPeriodStart, ReviewPeriodEnd,
    OverallRating, Goals, Achievements, ReviewDate
) VALUES
(1, 1, '2024-01-01', '2024-06-30', 4.5,
 'Implement new dashboard system, Improve system security',
 'Successfully migrated to PostgreSQL, Implemented row-level security',
 '2024-07-15'),

(2, 1, '2023-12-01', '2024-05-31', 4.2,
 'Optimize operational processes, Reduce delivery times',
 'Improved delivery efficiency by 15%, Implemented new tracking system',
 '2024-06-15'),

(3, 1, '2024-01-01', '2024-06-30', 4.0,
 'Streamline financial reporting, Implement cost analysis',
 'Created automated financial reports, Identified 10% cost savings',
 '2024-07-10');
GO

-- =================================================================
-- LOG INITIAL SETUP COMPLETION
-- =================================================================

INSERT INTO Audit.SystemEvents (EventType, EventDescription, Severity, UserID) VALUES
('System Initialization', 'Database initialized with default data and user accounts', 'Info', 1),
('Data Migration', 'Successfully migrated 10 dashboards from JSON format', 'Info', 1),
('User Setup', 'Created initial user accounts: mario_gonzalez (admin), admin (legacy), testuser', 'Info', 1),
('Employee Setup', 'Added 5 sample employees to HR system', 'Info', 1),
('Configuration', 'Initialized application configuration settings', 'Info', 1);
GO

-- =================================================================
-- VERIFICATION QUERIES
-- =================================================================

PRINT '=== MIGRATION VERIFICATION ===';

PRINT 'Users created:';
SELECT Username, IsAdmin, IsActive, FirstName, LastName FROM Security.Users;

PRINT 'Dashboards migrated:';
SELECT COUNT(*) AS TotalDashboards FROM Dashboard.Dashboards WHERE IsActive = 1;

PRINT 'Employees added:';
SELECT COUNT(*) AS TotalEmployees FROM HR.Employees WHERE EmploymentStatus = 'Active';

PRINT 'Categories created:';
SELECT CategoryName, Description FROM Dashboard.Categories WHERE IsActive = 1;

PRINT 'Departments created:';
SELECT DepartmentName, Description FROM HR.Departments WHERE IsActive = 1;

PRINT '✅ Data migration completed successfully!';
PRINT '👥 Users: 3 (mario_gonzalez as SuperAdmin)';
PRINT '📊 Dashboards: 10 migrated from JSON';
PRINT '👨‍💼 Employees: 5 sample employees added';
PRINT '🏢 Departments: 8 departments created';
PRINT '💼 Positions: 13 positions defined';
PRINT '⚙️ Configuration: 15 default settings applied';
PRINT '📝 Performance Reviews: 3 sample reviews added';
GO